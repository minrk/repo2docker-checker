name: test

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - master
      - docker-cache
  pull_request:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache docker images
      uses: actions/cache@v2
      with:
        path: |
          docker-cache
        key: docker-cache
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt -r requirements.txt
    - name: Show test environment
      run: |
        pip freeze
    - name: pre-commit check (run `pre-commit run --all-files` and push to fix any failures)
      run: |
        pre-commit run --all-files
    - name: Restore docker image cache
      run: |
        mkdir -p docker-cache
        shopt -s nullglob
        for tar in docker-cache/*.tar; do
          echo "loading docker cache $tar"
          docker load < "$tar"
        done
        echo "$(docker images -aq | wc -l) images loaded in docker"
    - name: Test with pytest
      run: |
        pytest -vsx --cov=./ --cov-report=xml
    - name: Export docker images for cache
      run: |
        mkdir -p docker-cache
        echo "Saving $(docker images -aq | wc -l) images"
        docker save $(docker images -aq) > docker-cache/images-${{ matrix.python-version }}.tar
    - name: Codecov
      uses: codecov/codecov-action@v1.0.7
      with:
        file: coverage.xml
